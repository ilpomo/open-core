name: Test

on:
  pull_request:
    branches:
      - main
      - dev

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Lint with Ruff
        run: |
          ruff check --output-format=github .

  test:
    name: Test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up ${{ matrix.os }} with Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]

      - name: Run tests with Pytest
        run: |
          pytest --cov=src --cov-report=xml:coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage-${{ matrix.os }}-${{ matrix.python-version }}.xml

  analyze:
    name: Analyze
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          path: coverage-reports/

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  auto-merge:
    name: Auto Merge
    needs: [lint, test, analyze]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Merge Pull Request
        uses: actions/github-script@v7
        with:
          script: |
            const { context, github } = require('@actions/github');
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              merge_method: 'squash'  # or 'merge' or 'rebase'
            });